// <auto-generated />
using System;
using ConnectEduV2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConnectEduV2.Migrations
{
    [DbContext(typeof(ConnectEduV1Context))]
    [Migration("20240521092627_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConnectEduV2.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassStatusId")
                        .HasColumnType("int")
                        .HasColumnName("ClassStatusID");

                    b.Property<string>("CoursePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Describe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("ClassStatusId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Class", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.ClassChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChatContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ChatDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    b.Property<int?>("ClassRegistrationId")
                        .HasColumnType("int")
                        .HasColumnName("ClassRegistrationID");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("ClassRegistrationId");

                    b.ToTable("ClassChat", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.ClassRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("PaymentStatusId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentStatusID");

                    b.Property<int?>("RegistrationStatusId")
                        .HasColumnType("int")
                        .HasColumnName("RegistrationStatusID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("PaymentStatusId");

                    b.HasIndex("RegistrationStatusId");

                    b.HasIndex("UserId");

                    b.ToTable("ClassRegistration", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.ClassStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ClassStatus", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.DataStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DataStatus", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DataStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int")
                        .HasColumnName("SchoolID");

                    b.HasKey("Id");

                    b.HasIndex("DataStatus");

                    b.HasIndex("SchoolId");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.DepositTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("PaymentStatusId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentStatusID");

                    b.Property<int?>("WalletId")
                        .HasColumnType("int")
                        .HasColumnName("WalletID");

                    b.HasKey("Id");

                    b.HasIndex("PaymentStatusId");

                    b.HasIndex("WalletId");

                    b.ToTable("DepositTransaction", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.Evaluate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Evaluate", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("ClassID");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EvaluateId")
                        .HasColumnType("int")
                        .HasColumnName("EvaluateID");

                    b.Property<int?>("RegistrationId")
                        .HasColumnType("int")
                        .HasColumnName("RegistrationID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("EvaluateId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "RegistrationId" }, "IX_Feedback")
                        .IsUnique()
                        .HasFilter("[RegistrationID] IS NOT NULL");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.PaymentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PaymentStatus", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.PurchaseTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<int?>("RegistrationId")
                        .HasColumnType("int")
                        .HasColumnName("RegistrationID");

                    b.Property<int?>("WalletId")
                        .HasColumnType("int")
                        .HasColumnName("WalletID");

                    b.HasKey("Id");

                    b.HasIndex("PaymentStatus");

                    b.HasIndex("RegistrationId");

                    b.HasIndex("WalletId");

                    b.ToTable("PurchaseTransaction", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.RegistrationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RegistrationStatus", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contents")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Report", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.RevenueSharing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("MentorReceived")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal?>("ProjectReceived")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int")
                        .HasColumnName("PurchaseID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "PurchaseId" }, "IX_RevenueSharing")
                        .IsUnique()
                        .HasFilter("[PurchaseID] IS NOT NULL");

                    b.ToTable("RevenueSharing", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DataStatusId")
                        .HasColumnType("int")
                        .HasColumnName("DataStatusID");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DataStatusId");

                    b.ToTable("School", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DataStatusId")
                        .HasColumnType("int")
                        .HasColumnName("DataStatusID");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int")
                        .HasColumnName("SchoolID");

                    b.HasKey("Id");

                    b.HasIndex("DataStatusId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Semester", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DataStatusId")
                        .HasColumnType("int")
                        .HasColumnName("DataStatusID");

                    b.Property<int?>("DerpartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DerpartmentID");

                    b.Property<string>("Describe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int")
                        .HasColumnName("SchoolID");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("SemesterID");

                    b.HasKey("Id");

                    b.HasIndex("DataStatusId");

                    b.HasIndex("DerpartmentId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("SemesterId");

                    b.ToTable("Subject", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FacebookPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int")
                        .HasColumnName("SchoolID");

                    b.Property<string>("ScoreboardPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SchoolId");

                    b.HasIndex("StatusId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.UserStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserStatus", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "UserID")
                        .IsUnique();

                    b.ToTable("Wallet", (string)null);
                });

            modelBuilder.Entity("ConnectEduV2.Models.Class", b =>
                {
                    b.HasOne("ConnectEduV2.Models.ClassStatus", "ClassStatus")
                        .WithMany("Classes")
                        .HasForeignKey("ClassStatusId")
                        .HasConstraintName("FK_Class_ClassStatus");

                    b.HasOne("ConnectEduV2.Models.Subject", "Subject")
                        .WithMany("Classes")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Class_Subject");

                    b.HasOne("ConnectEduV2.Models.User", "User")
                        .WithMany("Classes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Class_User");

                    b.Navigation("ClassStatus");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConnectEduV2.Models.ClassChat", b =>
                {
                    b.HasOne("ConnectEduV2.Models.Class", "Class")
                        .WithMany("ClassChats")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_ClassChat_Class");

                    b.HasOne("ConnectEduV2.Models.ClassRegistration", "ClassRegistration")
                        .WithMany("ClassChats")
                        .HasForeignKey("ClassRegistrationId")
                        .HasConstraintName("FK_ClassChat_ClassRegistration");

                    b.Navigation("Class");

                    b.Navigation("ClassRegistration");
                });

            modelBuilder.Entity("ConnectEduV2.Models.ClassRegistration", b =>
                {
                    b.HasOne("ConnectEduV2.Models.Class", "Class")
                        .WithMany("ClassRegistrations")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_ClassRegistration_Class");

                    b.HasOne("ConnectEduV2.Models.PaymentStatus", "PaymentStatus")
                        .WithMany("ClassRegistrations")
                        .HasForeignKey("PaymentStatusId")
                        .HasConstraintName("FK_ClassRegistration_PaymentStatus");

                    b.HasOne("ConnectEduV2.Models.RegistrationStatus", "RegistrationStatus")
                        .WithMany("ClassRegistrations")
                        .HasForeignKey("RegistrationStatusId")
                        .HasConstraintName("FK_ClassRegistration_RegistrationStatus");

                    b.HasOne("ConnectEduV2.Models.User", "User")
                        .WithMany("ClassRegistrations")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_ClassRegistration_User");

                    b.Navigation("Class");

                    b.Navigation("PaymentStatus");

                    b.Navigation("RegistrationStatus");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConnectEduV2.Models.Department", b =>
                {
                    b.HasOne("ConnectEduV2.Models.DataStatus", "DataStatusNavigation")
                        .WithMany("Departments")
                        .HasForeignKey("DataStatus")
                        .HasConstraintName("FK_Department_DataStatus");

                    b.HasOne("ConnectEduV2.Models.School", "School")
                        .WithMany("Departments")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_Department_School");

                    b.Navigation("DataStatusNavigation");

                    b.Navigation("School");
                });

            modelBuilder.Entity("ConnectEduV2.Models.DepositTransaction", b =>
                {
                    b.HasOne("ConnectEduV2.Models.PaymentStatus", "PaymentStatus")
                        .WithMany("DepositTransactions")
                        .HasForeignKey("PaymentStatusId")
                        .HasConstraintName("FK_DepositTransaction_PaymentStatus");

                    b.HasOne("ConnectEduV2.Models.Wallet", "Wallet")
                        .WithMany("DepositTransactions")
                        .HasForeignKey("WalletId")
                        .HasConstraintName("FK_DepositTransaction_Wallet");

                    b.Navigation("PaymentStatus");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("ConnectEduV2.Models.Feedback", b =>
                {
                    b.HasOne("ConnectEduV2.Models.Class", "Class")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_Feedback_Class");

                    b.HasOne("ConnectEduV2.Models.Evaluate", "Evaluate")
                        .WithMany("Feedbacks")
                        .HasForeignKey("EvaluateId")
                        .HasConstraintName("FK_Feedback_Evaluate");

                    b.HasOne("ConnectEduV2.Models.ClassRegistration", "Registration")
                        .WithOne("Feedback")
                        .HasForeignKey("ConnectEduV2.Models.Feedback", "RegistrationId")
                        .HasConstraintName("FK_Feedback_ClassRegistration");

                    b.HasOne("ConnectEduV2.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Feedback_User");

                    b.Navigation("Class");

                    b.Navigation("Evaluate");

                    b.Navigation("Registration");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConnectEduV2.Models.PurchaseTransaction", b =>
                {
                    b.HasOne("ConnectEduV2.Models.PaymentStatus", "PaymentStatusNavigation")
                        .WithMany("PurchaseTransactions")
                        .HasForeignKey("PaymentStatus")
                        .HasConstraintName("FK_PurchaseTransaction_PaymentStatus");

                    b.HasOne("ConnectEduV2.Models.ClassRegistration", "Registration")
                        .WithMany("PurchaseTransactions")
                        .HasForeignKey("RegistrationId")
                        .HasConstraintName("FK_PurchaseTransaction_ClassRegistration");

                    b.HasOne("ConnectEduV2.Models.Wallet", "Wallet")
                        .WithMany("PurchaseTransactions")
                        .HasForeignKey("WalletId")
                        .HasConstraintName("FK_PurchaseTransaction_Wallet");

                    b.Navigation("PaymentStatusNavigation");

                    b.Navigation("Registration");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("ConnectEduV2.Models.RevenueSharing", b =>
                {
                    b.HasOne("ConnectEduV2.Models.PurchaseTransaction", "Purchase")
                        .WithOne("RevenueSharing")
                        .HasForeignKey("ConnectEduV2.Models.RevenueSharing", "PurchaseId")
                        .HasConstraintName("FK_RevenueSharing_PurchaseTransaction");

                    b.HasOne("ConnectEduV2.Models.User", "User")
                        .WithMany("RevenueSharings")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_RevenueSharing_User");

                    b.Navigation("Purchase");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConnectEduV2.Models.School", b =>
                {
                    b.HasOne("ConnectEduV2.Models.DataStatus", "DataStatus")
                        .WithMany("Schools")
                        .HasForeignKey("DataStatusId")
                        .IsRequired()
                        .HasConstraintName("FK_School_DataStatus");

                    b.Navigation("DataStatus");
                });

            modelBuilder.Entity("ConnectEduV2.Models.Semester", b =>
                {
                    b.HasOne("ConnectEduV2.Models.DataStatus", "DataStatus")
                        .WithMany("Semesters")
                        .HasForeignKey("DataStatusId")
                        .HasConstraintName("FK_Semester_DataStatus");

                    b.HasOne("ConnectEduV2.Models.Department", "Department")
                        .WithMany("Semesters")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Semester_Department");

                    b.HasOne("ConnectEduV2.Models.School", "School")
                        .WithMany("Semesters")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_Semester_School");

                    b.Navigation("DataStatus");

                    b.Navigation("Department");

                    b.Navigation("School");
                });

            modelBuilder.Entity("ConnectEduV2.Models.Subject", b =>
                {
                    b.HasOne("ConnectEduV2.Models.DataStatus", "DataStatus")
                        .WithMany("Subjects")
                        .HasForeignKey("DataStatusId")
                        .HasConstraintName("FK_Subject_DataStatus");

                    b.HasOne("ConnectEduV2.Models.Department", "Derpartment")
                        .WithMany("Subjects")
                        .HasForeignKey("DerpartmentId")
                        .HasConstraintName("FK_Subject_Department");

                    b.HasOne("ConnectEduV2.Models.School", "School")
                        .WithMany("Subjects")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_Subject_School");

                    b.HasOne("ConnectEduV2.Models.Semester", "Semester")
                        .WithMany("Subjects")
                        .HasForeignKey("SemesterId")
                        .HasConstraintName("FK_Subject_Semester");

                    b.Navigation("DataStatus");

                    b.Navigation("Derpartment");

                    b.Navigation("School");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("ConnectEduV2.Models.User", b =>
                {
                    b.HasOne("ConnectEduV2.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_User_Department");

                    b.HasOne("ConnectEduV2.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role");

                    b.HasOne("ConnectEduV2.Models.School", "School")
                        .WithMany("Users")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_User_School");

                    b.HasOne("ConnectEduV2.Models.UserStatus", "Status")
                        .WithMany("Users")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_User_UserStatus");

                    b.Navigation("Department");

                    b.Navigation("Role");

                    b.Navigation("School");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ConnectEduV2.Models.Wallet", b =>
                {
                    b.HasOne("ConnectEduV2.Models.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("ConnectEduV2.Models.Wallet", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Wallet_User1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConnectEduV2.Models.Class", b =>
                {
                    b.Navigation("ClassChats");

                    b.Navigation("ClassRegistrations");

                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("ConnectEduV2.Models.ClassRegistration", b =>
                {
                    b.Navigation("ClassChats");

                    b.Navigation("Feedback");

                    b.Navigation("PurchaseTransactions");
                });

            modelBuilder.Entity("ConnectEduV2.Models.ClassStatus", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("ConnectEduV2.Models.DataStatus", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Schools");

                    b.Navigation("Semesters");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("ConnectEduV2.Models.Department", b =>
                {
                    b.Navigation("Semesters");

                    b.Navigation("Subjects");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ConnectEduV2.Models.Evaluate", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("ConnectEduV2.Models.PaymentStatus", b =>
                {
                    b.Navigation("ClassRegistrations");

                    b.Navigation("DepositTransactions");

                    b.Navigation("PurchaseTransactions");
                });

            modelBuilder.Entity("ConnectEduV2.Models.PurchaseTransaction", b =>
                {
                    b.Navigation("RevenueSharing");
                });

            modelBuilder.Entity("ConnectEduV2.Models.RegistrationStatus", b =>
                {
                    b.Navigation("ClassRegistrations");
                });

            modelBuilder.Entity("ConnectEduV2.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ConnectEduV2.Models.School", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Semesters");

                    b.Navigation("Subjects");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ConnectEduV2.Models.Semester", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("ConnectEduV2.Models.Subject", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("ConnectEduV2.Models.User", b =>
                {
                    b.Navigation("ClassRegistrations");

                    b.Navigation("Classes");

                    b.Navigation("Feedbacks");

                    b.Navigation("RevenueSharings");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("ConnectEduV2.Models.UserStatus", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ConnectEduV2.Models.Wallet", b =>
                {
                    b.Navigation("DepositTransactions");

                    b.Navigation("PurchaseTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
